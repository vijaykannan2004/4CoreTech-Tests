{
	"info": {
		"_postman_id": "review-management-tests",
		"name": "Review Management API Tests",
		"description": "API tests for review functionality",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Review - Valid",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"rating\": 5,\n  \"content\": \"Great place!\",\n  \"businessId\": 1\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/review/create",
					"host": ["{{base_url}}"],
					"path": ["api", "review", "create"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test('Response has review ID', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.be.above(0);",
							"});",
							"",
							"pm.test('Rating is preserved', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.rating).to.eql(5);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Create Review - Rating Only",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"rating\": 4,\n  \"content\": \"\",\n  \"businessId\": 1\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/review/create",
					"host": ["{{base_url}}"],
					"path": ["api", "review", "create"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test('Rating-only review is allowed', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.rating).to.eql(4);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Create Review - Invalid Rating",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"rating\": 6,\n  \"content\": \"Bad test\",\n  \"businessId\": 1\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/review/create",
					"host": ["{{base_url}}"],
					"path": ["api", "review", "create"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test('Response indicates invalid rating', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include('rating');",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Create Review - Content Too Long",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"rating\": 5,\n  \"content\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n  \"businessId\": 1\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/review/create",
					"host": ["{{base_url}}"],
					"path": ["api", "review", "create"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test('Response indicates content too long', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include('length');",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Create Review - XSS Attempt",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"rating\": 5,\n  \"content\": \"<script>alert('hack')</script>\",\n  \"businessId\": 1\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/review/create",
					"host": ["{{base_url}}"],
					"path": ["api", "review", "create"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test('XSS content is sanitized', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.content).to.not.include('<script>');",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Create Review - Duplicate User Review",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"rating\": 3,\n  \"content\": \"Another review\",\n  \"businessId\": 1\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/review/create",
					"host": ["{{base_url}}"],
					"path": ["api", "review", "create"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 409', function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"",
							"pm.test('Response indicates duplicate review', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include('already reviewed');",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Delete Own Review",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/review/{{review_id}}",
					"host": ["{{base_url}}"],
					"path": ["api", "review", "{{review_id}}"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 204', function () {",
							"    pm.response.to.have.status(204);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Get Reviews for Business",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/review/business/{{business_id}}",
					"host": ["{{base_url}}"],
					"path": ["api", "review", "business", "{{business_id}}"]
				}
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Response is an array', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"});",
							"",
							"pm.test('Each review has required fields', function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function(review) {",
							"        pm.expect(review).to.have.property('rating');",
							"        pm.expect(review.rating).to.be.at.least(1);",
							"        pm.expect(review.rating).to.be.at.most(5);",
							"    });",
							"});"
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://localhost:5001",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "review_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "business_id",
			"value": "1",
			"type": "string"
		}
	]
}
